/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFT, NFTInterface } from "../NFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "marketplaceAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "createToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019993803806200199983398101604081905262000034916200016e565b604080518082018252601081526f4d657461766572736520546f6b656e7360801b6020808301918252835180850190945260048452631351551560e21b9084015281519192916200008891600091620000c8565b5080516200009e906001906020840190620000c8565b5050600880546001600160a01b0319166001600160a01b03939093169290921790915550620001db565b828054620000d6906200019e565b90600052602060002090601f016020900481019282620000fa576000855562000145565b82601f106200011557805160ff191683800117855562000145565b8280016001018555821562000145579182015b828111156200014557825182559160200191906001019062000128565b506200015392915062000157565b5090565b5b8082111562000153576000815560010162000158565b60006020828403121562000180578081fd5b81516001600160a01b038116811462000197578182fd5b9392505050565b600181811c90821680620001b357607f821691505b60208210811415620001d557634e487b7160e01b600052602260045260246000fd5b50919050565b6117ae80620001eb6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb4651461021b578063b88d4fde1461022e578063c87b56dd14610241578063e985e9c514610254578063f5537ede1461029057600080fd5b80636352211e146101e557806370a08231146101f857806378a895671461020b57806395d89b411461021357600080fd5b806323b872dd116100de57806323b872dd1461018d57806332a2c5d0146101a057806342842e0e146101b157806345576f94146101c457600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004611460565b6102a3565b60405190151581526020015b60405180910390f35b6101406102f5565b60405161012f919061158e565b61016061015b3660046114de565b610387565b6040516001600160a01b03909116815260200161012f565b61018b610186366004611437565b610414565b005b61018b61019b366004611349565b61052a565b6008546001600160a01b0316610160565b61018b6101bf366004611349565b61055b565b6101d76101d2366004611498565b610576565b60405190815260200161012f565b6101606101f33660046114de565b6105be565b6101d76102063660046112fd565b610635565b6101d76106bc565b6101406106cc565b61018b6102293660046113fd565b6106db565b61018b61023c366004611384565b6106ea565b61014061024f3660046114de565b610722565b610123610262366004611317565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61018b61029e366004611349565b610899565b60006001600160e01b031982166380ac58cd60e01b14806102d457506001600160e01b03198216635b5e139f60e01b145b806102ef57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610304906116b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610330906116b3565b801561037d5780601f106103525761010080835404028352916020019161037d565b820191906000526020600020905b81548152906001019060200180831161036057829003601f168201915b5050505050905090565b600061039282610902565b6103f85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061041f826105be565b9050806001600160a01b0316836001600160a01b0316141561048d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103ef565b336001600160a01b03821614806104a957506104a98133610262565b61051b5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103ef565b610525838361091f565b505050565b610534338261098d565b6105505760405162461bcd60e51b81526004016103ef906115f3565b610525838383610a73565b610525838383604051806020016040528060008152506106ea565b6000610586600780546001019055565b600061059160075490565b905061059d3382610c13565b6105a78184610d46565b6008546102ef906001600160a01b031660016106db565b6000818152600260205260408120546001600160a01b0316806102ef5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103ef565b60006001600160a01b0382166106a05760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103ef565b506001600160a01b031660009081526003602052604090205490565b60006106c760075490565b905090565b606060018054610304906116b3565b6106e6338383610dd1565b5050565b6106f4338361098d565b6107105760405162461bcd60e51b81526004016103ef906115f3565b61071c84848484610ea0565b50505050565b606061072d82610902565b6107935760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103ef565b600082815260066020526040812080546107ac906116b3565b80601f01602080910402602001604051908101604052809291908181526020018280546107d8906116b3565b80156108255780601f106107fa57610100808354040283529160200191610825565b820191906000526020600020905b81548152906001019060200180831161080857829003601f168201915b50505050509050600061084360408051602081019091526000815290565b9050805160001415610856575092915050565b815115610888578082604051602001610870929190611522565b60405160208183030381529060405292505050919050565b61089184610ed3565b949350505050565b826001600160a01b03166108ac826105be565b6001600160a01b0316146105505760405162461bcd60e51b815260206004820181905260248201527f46726f6d2061646472657373206d75737420626520746f6b656e206f776e657260448201526064016103ef565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610954826105be565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061099882610902565b6109f95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103ef565b6000610a04836105be565b9050806001600160a01b0316846001600160a01b03161480610a3f5750836001600160a01b0316610a3484610387565b6001600160a01b0316145b8061089157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610891565b826001600160a01b0316610a86826105be565b6001600160a01b031614610aee5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103ef565b6001600160a01b038216610b505760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103ef565b610b5b60008261091f565b6001600160a01b0383166000908152600360205260408120805460019290610b84908490611670565b90915550506001600160a01b0382166000908152600360205260408120805460019290610bb2908490611644565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610c695760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103ef565b610c7281610902565b15610cbf5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103ef565b6001600160a01b0382166000908152600360205260408120805460019290610ce8908490611644565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610d4f82610902565b610db25760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103ef565b60008281526006602090815260409091208251610525928401906111d2565b816001600160a01b0316836001600160a01b03161415610e335760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103ef565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610eab848484610a73565b610eb784848484610fab565b61071c5760405162461bcd60e51b81526004016103ef906115a1565b6060610ede82610902565b610f425760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103ef565b6000610f5960408051602081019091526000815290565b90506000815111610f795760405180602001604052806000815250610fa4565b80610f83846110b8565b604051602001610f94929190611522565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b156110ad57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fef903390899088908890600401611551565b602060405180830381600087803b15801561100957600080fd5b505af1925050508015611039575060408051601f3d908101601f191682019092526110369181019061147c565b60015b611093573d808015611067576040519150601f19603f3d011682016040523d82523d6000602084013e61106c565b606091505b50805161108b5760405162461bcd60e51b81526004016103ef906115a1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610891565b506001949350505050565b6060816110dc5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561110657806110f0816116ee565b91506110ff9050600a8361165c565b91506110e0565b60008167ffffffffffffffff81111561112f57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611159576020820181803683370190505b5090505b84156108915761116e600183611670565b915061117b600a86611709565b611186906030611644565b60f81b8183815181106111a957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506111cb600a8661165c565b945061115d565b8280546111de906116b3565b90600052602060002090601f0160209004810192826112005760008555611246565b82601f1061121957805160ff1916838001178555611246565b82800160010185558215611246579182015b8281111561124657825182559160200191906001019061122b565b50611252929150611256565b5090565b5b808211156112525760008155600101611257565b600067ffffffffffffffff8084111561128657611286611749565b604051601f8501601f19908116603f011681019082821181831017156112ae576112ae611749565b816040528093508581528686860111156112c757600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146112f857600080fd5b919050565b60006020828403121561130e578081fd5b610fa4826112e1565b60008060408385031215611329578081fd5b611332836112e1565b9150611340602084016112e1565b90509250929050565b60008060006060848603121561135d578081fd5b611366846112e1565b9250611374602085016112e1565b9150604084013590509250925092565b60008060008060808587031215611399578081fd5b6113a2856112e1565b93506113b0602086016112e1565b925060408501359150606085013567ffffffffffffffff8111156113d2578182fd5b8501601f810187136113e2578182fd5b6113f18782356020840161126b565b91505092959194509250565b6000806040838503121561140f578182fd5b611418836112e1565b91506020830135801515811461142c578182fd5b809150509250929050565b60008060408385031215611449578182fd5b611452836112e1565b946020939093013593505050565b600060208284031215611471578081fd5b8135610fa48161175f565b60006020828403121561148d578081fd5b8151610fa48161175f565b6000602082840312156114a9578081fd5b813567ffffffffffffffff8111156114bf578182fd5b8201601f810184136114cf578182fd5b6108918482356020840161126b565b6000602082840312156114ef578081fd5b5035919050565b6000815180845261150e816020860160208601611687565b601f01601f19169290920160200192915050565b60008351611534818460208801611687565b835190830190611548818360208801611687565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611584908301846114f6565b9695505050505050565b602081526000610fa460208301846114f6565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156116575761165761171d565b500190565b60008261166b5761166b611733565b500490565b6000828210156116825761168261171d565b500390565b60005b838110156116a257818101518382015260200161168a565b8381111561071c5750506000910152565b600181811c908216806116c757607f821691505b602082108114156116e857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156117025761170261171d565b5060010190565b60008261171857611718611733565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461177557600080fd5b5056fea2646970667358221220eb6d27a51995d2dcc42ef70607ea4bdeefa96c1ddaaf2e9f8b301b2d9cf3b8d564736f6c63430008040033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    marketplaceAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFT> {
    return super.deploy(marketplaceAddress, overrides || {}) as Promise<NFT>;
  }
  getDeployTransaction(
    marketplaceAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(marketplaceAddress, overrides || {});
  }
  attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
